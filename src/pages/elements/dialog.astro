---
import ElementPageLayout from "@/src/layouts/ElementPageLayout.astro";
import DialogComponent from "@/src/components/elements/Dialog.astro";
import { DIALOG_HTML_CODE, DIALOG_JS_CODE } from "@/src/consts/dialogCode";
import type { Snippet } from "@/src/types/codeSnippet";

const snippets: Snippet[] = [
  {
    code: DIALOG_HTML_CODE,
    lang: "html",
    title: "HTML",
  },
  {
    code: DIALOG_JS_CODE,
    lang: "js",
    title: "JavaScript",
  },
];
---
<ElementPageLayout
    title="Dialog Element"
    elementName="The &lt;dialog&gt; Element"
    snippets={snippets}
>
    <p slot="description" class="text-lg text-theme-highlight mb-6">
        The &lt;dialog&gt; element represents a dialog box or other interactive component, such as a dismissible alert, inspector, or sub-window.
    </p>

    <p slot="when-to-use" class="mb-4">
        Use the &lt;dialog&gt; element when you need to create modal windows, pop-ups, or any other kind of interactive overlay that requires user interaction. It's great for things like confirmation dialogs, forms, or important notifications.
    </p>
    <p slot="when-to-use">
        Native dialogs handle focus management and keyboard accessibility (like trapping focus and closing with the 'Esc' key) out of the box, which is a huge accessibility win.
    </p>
    
    <DialogComponent slot="demo" />
</ElementPageLayout>